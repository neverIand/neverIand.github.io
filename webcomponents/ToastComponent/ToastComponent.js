import{handleThemeChange}from"/scripts/theme.js";class ToastComponent extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),document.addEventListener("berry-theme",(t=>handleThemeChange(t,this)))}connectedCallback(){this.render()}render(){const t=document.createElement("template");t.innerHTML='\n        <style>\n          :host {\n            position: fixed;\n            top: 0;\n            left: 0;\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            width: 100%;\n            transform: translateY(-200%);\n            z-index: 500;\n          }\n          #toast {\n            padding: 10px 20px;\n            color: var(--bg-color);\n            background-color: var(--text-color);\n            transition: all 0.3s;\n          }\n          #toast.show {\n            transform: translateY(calc(200% + 70px));\n          }\n          #toast.error {\n            background-color: red;\n          }\n          #toast.warning {\n            background-color: orange;\n          }\n        </style>\n        <div id="toast">\n          toast\n        </div>\n        ',this.shadowRoot.appendChild(t.content.cloneNode(!0)),this.addCopyEventListener()}addCopyEventListener(){document.addEventListener("berry-toast",function(t){this.showToast(t)}.bind(this))}showToast(t){const e=this.getAttribute("timeout")||2e3,n=this.shadowRoot.getElementById("toast");n.textContent=t.detail.message,n.classList.add("show"),n.classList.add(t.detail.type),setTimeout((function(){n.classList.remove("show"),n.classList.remove(t.detail.type)}),e)}}customElements.get("berry-toast")||customElements.define("berry-toast",ToastComponent);export default ToastComponent;