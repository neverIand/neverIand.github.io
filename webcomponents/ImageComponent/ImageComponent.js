import{handleThemeChange}from"/scripts/theme.js";class ImageComponent extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),document.addEventListener("berry-theme",(e=>handleThemeChange(e,this)))}connectedCallback(){this.render()}addFullScreenEventListener(e){const t=this.shadowRoot.getElementById("image");t.addEventListener("click",function(){this.toggleFullscreen(t,e)}.bind(this))}render(){const e=this.getAttribute("data-title")||"",t=this.getAttribute("data-alt")||e,n=this.getAttribute("data-width")||"auto",o=document.createElement("template");o.innerHTML=`\n      <style>\n        :host {\n          display: block;\n        }\n        #container {\n          position: relative;\n          width: 100%;\n          max-width: ${n};\n          margin-top: 0.5em;\n        }\n        p {\n          margin: 0;\n          color: var(--text-color);\n          text-align: center;\n        }\n        img {\n          opacity: 0;\n          width: 100%;\n          height: auto;\n          transition: opacity 0.5s;\n        }\n        #modal {\n          display: none;\n          justify-content: center;\n          align-items: center;\n          position: fixed;\n          top: 0;\n          left: 0;\n          width: 100%;\n          height: 100%;\n          overflow-y: auto;\n          background-color: rgba(0, 0, 0, 0.8);\n          z-index: 9999;\n        }\n        #modal img{\n          opacity: 1;\n          max-width: 100%;\n          aspect-ratio: auto;\n        }\n      </style>\n      <div id="container">\n        <img id="image" title="${e}" alt="${t}"></img>\n        ${e&&`<p>${e}</p>`}\n      </div>\n      <div id="modal">\n        <img></img>\n      </div>\n      `,this.shadowRoot.appendChild(o.content.cloneNode(!0));const i=this.getAttribute("data-src");this.addFullScreenEventListener(i),this.observeImage(i)}observeImage(e){const t=this.shadowRoot.getElementById("image"),n=new IntersectionObserver((o=>{o.forEach((o=>{o.isIntersecting&&(t.src=e||"/articles/images/NoMediaAvailable.png",t.onload=()=>t.style.opacity="1",n.disconnect())}))}),{threshold:.5});n.observe(t)}toggleFullscreen(e,t){document.fullscreenEnabled?document.fullscreenElement?document.exitFullscreen&&document.exitFullscreen():e.requestFullscreen().catch((e=>{console.error(`Error attempting to enable fullscreen mode: ${e.message} (${e.name})`),this.showModal(t)})):this.showModal(t)}showModal(e){const t=this.shadowRoot.getElementById("modal");t.style.display="flex";const n=t.querySelector("img");n.src=e,n.addEventListener("click",(function(){t.style.display="none";const e=new CustomEvent("blockScroll",{detail:{block:!1}});document.dispatchEvent(e)}));const o=new CustomEvent("blockScroll",{detail:{block:!0}});document.dispatchEvent(o)}}customElements.get("berry-img")||customElements.define("berry-img",ImageComponent);export default ImageComponent;