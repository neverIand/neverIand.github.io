import{handleThemeChange}from"/scripts/theme.js";class LogoComponent extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),document.addEventListener("berry-theme",(e=>handleThemeChange(e,this)))}static get observedAttributes(){return["size","animate"]}attributeChangedCallback(e,t,n){this.updateStyles()}connectedCallback(){this.render()}render(){const e=document.createElement("template");e.innerHTML='\n    <div class="square outline" role="presentation" aria-hidden="true">\n        <div class="square left-square">\n        </div>\n        <div class="square right-square"></div>\n        <div class="square core"></div>\n    </div>\n',this.shadowRoot.appendChild(e.content.cloneNode(!0)),this.updateStyles()}updateStyles(){const e=this.getAttribute("size")||"300",t=this.getAttribute("animate")||"true",n=parseInt(e),o=.04*n,r=n*(2/75),a=n*(2/3),i=n/2,l=n/3;let s=this.shadowRoot.querySelector("style");s||(s=document.createElement("style"),this.shadowRoot.appendChild(s));const d=`\n    :host {\n        --length: ${n}px;\n        --logo-border-width: ${o}px;\n        --logo-border-radius: ${r}px;\n        --logo-left-square-width: ${a}px;\n        --logo-right-square-width: ${i}px;\n        --logo-core-width: ${l}px;\n        --logo-color: rgb(121,0,142);\n    }\n    .square {\n        background-color: var(--bg-color);\n        border: var(--logo-border-width) solid var(--logo-color);\n        border-radius: var(--logo-border-radius);\n    }\n    .outline {\n        position: relative;\n        width: var(--length);\n        height: var(--length);\n        z-index: 200;\n        overflow: hidden;\n    }\n    .left-square {\n        position: absolute;\n        top: calc(var(--length) * 0.3);\n        left: calc(0px - var(--length) / 3);\n        width: var(--logo-left-square-width);\n        height: var(--logo-left-square-width);\n        z-index: 100;\n        ${"true"===t?"":"transform: rotateZ(60deg);"}\n        animation: ${"true"===t?"transformLeft 4s infinite linear":"inherit"};\n    }\n    .right-square {\n        position: absolute;\n        top: calc(var(--length) * calc(1 / 15));\n        left: calc(var(--length) * calc(11 / 15));\n        transform: rotateZ(60deg);\n        width: var(--logo-right-square-width);\n        height: var(--logo-right-square-width);\n        z-index: 50;\n        animation: ${"true"===t?"transformLeft 4s infinite linear":"none"};\n    }\n    .core {\n        position: relative;\n        top: calc(var(--logo-core-width) - var(--logo-border-width) / 2);\n        width: var(--logo-core-width);\n        height: var(--logo-core-width);\n        margin: auto;\n        border: var(--logo-border-width) solid var(--text-color);\n    }\n    /* TODO: add optional rotation animation */\n    @keyframes transformLeft {\n        from {\n            transform: translateX(-${1.467*n}px) rotateZ(60deg);\n        }\n        to {\n            transform: translateX(${1.733*n}px) rotateZ(-300deg);\n        }\n    }\n`;s.textContent=d}}customElements.get("berry-logo")||customElements.define("berry-logo",LogoComponent);export default LogoComponent;